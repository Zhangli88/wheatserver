# wheatserver configuration file example

# Specify your protocol module name
# Now support `Redis`, `Http`
# default: Http
protocol Redis

# If you want you can bind a single interface, if the bind option is not
# specified all the interfaces will listen for incoming connections.
#
# defaut 0.0.0.0
bind-addr 127.0.0.1

# Accept connections on the specified port, default is 10828.
#
# default 10828
port 10828

# The worker process you want, the number is influenced by your core 
# number.
# Max number: 1024
#
# default 4
worker-number 4

# The type of worker to use: SyncWorker/AsyncWorker
#
# SyncWorker: The most basic and the default worker type is a synchronous
# worker class that handles a single request at a time. This model is the
# simplest to reason about as any errors will affect at most a single request.
# Though as we describe below only processing a single request at a time
# requires some assumptions about how applic
#
# Async Workers: The asynchronous workers available are based on Event Drive
# Library.
#
# In general, an application should be able to make use of these worker
# classes with no changes.
# It is likely to use AsyncWorker to deployment and use SyncWorker to develop
# in ease.
#
# default SyncWorker
worker-type AsyncWorker

# Specify the log file name. Also 'stdout' can be used to force
# Redis to log on the standard output. Note that if you use standard
# output for logging but daemonize, logs will be sent to /dev/null
#
# default stdout
# logfile /tmp/wheatserver.log

# Set server verbosity to debug or watch
# it can be one of:
# debug (a lot of information, useful for development/testing)
# verbose (many rarely useful info, but not a mess like the debug level)
# notice (moderately verbose, what you want in production probably)
# warning (only very important / critical messages are logged)
#
# default notice
logfile-level debug

# Daemonize the process.
# Detaches the server from the controlling terminal and enters the background.
#
# default off
daemon off

# A filename to use for the PID file.
# If not set, no PID file will be written.
#
# default: Not Write Pid File
pidfile /tmp/wheatserver.pid

# The following option sets a timeout for worker handle request.
# If worker is no response in `timeout`, master will kill this worker.
#
# It is important to make sure that this value is greater than the value
# specified for stat-refresh-time otherwise a timeout will be detected
# every time there is low traffic between the master and the slave.
# Master detect timeout worker rely on statistic info response!
# Recommend value: 2*stat-refresh-time
#
# default: 30
timeout-seconds 30

# Advanced option
# Set size of mbuf chunk in bytes
#
# default: 16384(16384)
mbuf-size 16384

# Advanced option
# Set the internal buffer size for each client request content in order to
# avoid much data attack.
# If you plan to receive big requests with lots of headers or user may upload
# big file you can increase this value up to 16777216 (16M).
# set `0` means no limit.
#
# default: 4194304(4M)
max-buffer-size 4194304

############################### Statistic ##############################

# Enable the stats server on the specified address.
#
# defaut: 127.0.0.1
stat-bind-addr 127.0.0.1

# Enable the stats server on the specified port.
#
# default: 10829
stat-port 10829

# Statistic information refresh time, master process receive information
# from workers every `stat-refresh-time` seconds.
#
# default: 5
stat-refresh-time 5

################################# Http #################################

# Specify document root path
#
# default: NULL
document-root example

# The Access log file to write to.
# “stdout” means log to stderr.
#
# default: Not Write Access Log
# access-log stdout

################################# WSGI ##################################

# For example, if you have a Django project called example.
# see https://docs.djangoproject.com/en/1.4/howto/deployment/wsgi/
# The 'application` object is in path below:
# /home/my/django/example/wsgi.py
# If so, app-project-path /home/my/django/example/
# app-module-name wsgi
# app-name application

# Specify the Python package search absolute path(insert to sys.path)
# Example: /var/www/django/project/
#
# default NULL
app-project-path example

# Specify the WSGI application's script name.
# use '.' to divide directory like python(sample.settings)
#
# default NULL
app-module-name app.wsgi

# Specify the WSGI application's callable variable.
#
# default NULL
app-name application

############################# Static File ###############################
#
# Specify static file directory, now only support one directory(Test)
# Must start with '/'
#
# default: NULL
static-file-dir /static/

# Specify static file max size.
# set `0` means no limit.
#
# default: 16777216(16M)
file-maxsize 16777216

# Specify allowed extension, '*' means all extensions is allowed.
# Suggested type see http://en.wikipedia.org/wiki/MIME_type
# Attention: No Space between extensions and ',' is the separator.
# Format: (EXTENSIONS,)*EXTENSION
# Example: allowed-extension jpg,gif,bmp,png
#
# default: *
allowed-extension *


################################# Redis #################################

# Specify redis servers below
#
# default: NULL
redis-servers
- 127.0.0.1:6379
